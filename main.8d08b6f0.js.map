{"version":3,"file":"main.8d08b6f0.js","sources":["../vite/modulepreload-polyfill","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Node.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/visit.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/directives.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/anchors.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Alias.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/toJS.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/createNode.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Collection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyComment.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyString.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringify.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/log.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Pair.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyPair.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/YAMLMap.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/map.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/seq.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/string.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/null.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/bool.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/float.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/int.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/json/schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/tags.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/Schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/applyReviver.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/Document.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/errors.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-props.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-contains-newline.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-map-includes.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-block-map.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-end.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-collection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-node.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/composer.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-doc.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst-stringify.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst-visit.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/lexer.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/line-counter.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/parser.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/public-api.js","../node_modules/.pnpm/ts-debounce@4.0.0/node_modules/ts-debounce/dist/src/index.esm.js","../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt === 'function' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (indent === '' && containsDocumentMarker(value)) {\n        ctx.forceBlockIndent = true;\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vcb = '';\n    let valueComment = null;\n    if (isNode(value)) {\n        if (value.spaceBefore)\n            vcb = '\\n';\n        if (value.commentBefore) {\n            const cs = commentString(value.commentBefore);\n            vcb += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        valueComment = value.comment;\n    }\n    else if (value && typeof value === 'object') {\n        value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (vcb || keyComment) {\n        if (valueStr === '' && !ctx.inFlow)\n            ws = vcb === '\\n' ? '\\n\\n' : vcb;\n        else\n            ws = `${vcb}\\n${ctx.indent}`;\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n'))\n            ws = `\\n${ctx.indent}`;\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n')\n        ws = '';\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start} ${lines.join(' ')} ${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                // TODO: assert being at last item?\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    map.range = [bm.offset, offset, offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        offset = props.end;\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(offset, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                // TODO: assert being at last item?\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, offset, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment)\n        node.comment = comment;\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","import css from './css/wikidot.css';\nimport init from './css/init.css';\nimport collapsible from './css/collapsible.css';\nimport YAML from 'yaml'\nimport { debounce } from \"ts-debounce\";\nimport { throttle } from 'throttle-typescript';\nimport ftmlWorker from './ftml.web.worker.js?bundled-worker&dataurl';\n\nlet ftml = new Worker(ftmlWorker, {\n  type: 'module',\n});\n\ndocument.querySelector(\"head > style#innercss\")!.innerHTML = css;\ndocument.querySelector(\"head > style#collapsible\")!.innerHTML = collapsible;\ndocument.querySelector(\"head > style#init\")!.innerHTML = init;\n\n// Workerスレッドから受信\nftml.onmessage = (event: MessageEvent) => {\n  const { html, styles, type } = event.data;\n  const pageStyles = document.getElementById('page-styles')!;\n  const pageContent = document.getElementById('page-content')!;\n  const sideContent = document.getElementById('side-bar')!;\n  const topContent = document.getElementById('top-bar')!;\n  if (type == 'page') {\n    pageContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else if (type == 'side') {\n    sideContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else if (type == 'top') {\n    topContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else {\n    pageContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  }\n  if (styles.length > 0) {\n    pageStyles.innerHTML = styles.map((v: string) => `<style>\\n${v.replace(/\\\\</g, '&lt;')}\\n</style>`).join(\"\\n\\n\");\n  } else {\n    pageStyles.innerHTML = \"\";\n  }\n};\n\nasync function loadlocales(lang: string = 'en') {\n  const sideftml = await fetch(`./locales/${lang}/side.ftml`).then(v => v.text());\n  const topftml = await fetch(`./locales/${lang}/top.ftml`).then(v => v.text());\n  const theme = await fetch(`./locales/${lang}/theme.css`).then(v => v.text());\n  const messages = YAML.parse(await fetch(`./locales/${lang}/messages.yaml`).then(v => v.text()));\n  for (const key in messages.actionarea) {\n    let messagevalue = messages.actionarea[key];\n    if (Array.isArray(messagevalue)) {\n      const message = messagevalue.map((v: string) => `<li>${v}</li>`).join(\"\");\n      document.querySelector(`#actionarea-${key}`)!.innerHTML = message;\n    }\n    else if (key == \"save\") {\n      document.querySelector(`#actionarea-${key}`)!.value = messagevalue;\n    }\n    else {\n      document.querySelector(`#actionarea-${key}`)!.innerHTML = messagevalue;\n    }\n  }\n  readlang(lang);\n  document.querySelector(\"head > style#theme\")!.innerHTML = theme;\n  ftml.postMessage({ value: sideftml, type: \"side\" });\n  ftml.postMessage({ value: topftml, type: \"top\" });\n}\nasync function readlang(lang: string) {\n  document.getElementById(\"lang-select\")!.innerHTML = \"\";\n  const langconfig = YAML.parse(await fetch('./locales/index.yaml').then(v => v.text()));\n  for (const key in langconfig[\"lang\"]) {\n    let op = document.createElement(\"option\");\n    op.value = key;\n    op.label = langconfig[\"lang\"][key];\n    op.text = langconfig[\"lang\"][key];\n    if (key == lang)\n      op.selected = true;\n    document.getElementById(\"lang-select\")!.appendChild(op);\n  }\n}\n\nconst editpageField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-textarea')!;\nconst edittitleField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-title')!;\nconst editsideField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-side-textarea')!;\nconst editsaveButton: HTMLInputElement = <HTMLInputElement>document.getElementById('actionarea-save')!;\nconst langSelect: HTMLInputElement = <HTMLInputElement>document.getElementById('lang-select')!;\n\neditpageField.addEventListener('input', debounce((event) => {\n    const { target } = event;\n    if (!(target instanceof HTMLTextAreaElement)) {\n      return;\n    }\n    const value = target.value;\n    const type = \"page\"\n    const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n    localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n    ftml.postMessage({ value: value, type: type });\n}, 1000));\n\neditsideField.addEventListener('input', debounce((event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLTextAreaElement)) {\n    return;\n  }\n  const value = target.value;\n  const type = \"side\"\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n  ftml.postMessage({ value: value, type: type });\n}, 1000));\n\nedittitleField.addEventListener('input', (event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLInputElement)) {\n    return;\n  }\n  const value = target.value;\n  document.querySelector(\"#page-title\")!.innerHTML = value;\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n});\n\nlangSelect.addEventListener('change', function () {\n  const lang = this.value;\n  loadlocales(lang);\n  const WPconfigItem = { lang: lang };\n  localStorage.setItem(\"WPconfig\", JSON.stringify(WPconfigItem));\n\n});\n\neditsaveButton.addEventListener('click', async () => {\n  const opts = {\n    suggestedName: edittitleField.value ? edittitleField.value : 'underfined',\n    types: [{\n      description: 'Foundation Text Markup Language',\n      accept: { 'text/plain': ['.ftml'] },\n    }],\n  };\n  try {\n    const handle = await window.showSaveFilePicker(opts);\n    const writable = await handle.createWritable();\n    await writable.write(editpageField.value);\n    await writable.close();\n  } catch (err) {\n    console.log(err)\n  }\n})\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const WPconfigItem = localStorage.getItem(\"WPconfig\");\n  if (WPconfigItem) {\n    const WPconfig = JSON.parse(WPconfigItem);\n    loadlocales(WPconfig.lang);\n  } else {\n    loadlocales();\n  }\n  const FtmlStorageItem = localStorage.getItem(\"FtmlStorage\");\n  if (FtmlStorageItem) {\n    const FtmlStorage = JSON.parse(FtmlStorageItem);\n    edittitleField.value = FtmlStorage.title;\n    editpageField.value = FtmlStorage.page;\n    editsideField.value = FtmlStorage.side;\n    if (FtmlStorage.page) {\n      const type = \"page\"\n      ftml.postMessage({ value: FtmlStorage.page, type: type });\n    }\n    if (FtmlStorage.side) {\n      const type = \"side\"\n      ftml.postMessage({ value: FtmlStorage.side, type: type });\n    }\n    if (FtmlStorage.title) {\n      document.querySelector(\"#page-title\")!.innerHTML = FtmlStorage.title;\n    }\n  }\n  const FtmlStrageItem = localStorage.getItem(\"FtmlStrage\");\n  if (FtmlStrageItem) {\n    localStorage.removeItem(\"FtmlStrage\");\n  }\n});\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","isDocument","isMap","isPair","isScalar","isSeq","isCollection$1","isNode","NodeBase","constructor","Object","defineProperty","this","value","clone","copy","create","getPrototypeOf","getOwnPropertyDescriptors","range","slice","BREAK","SKIP","REMOVE","visit$1","visitor","visitor_","initVisitor","visit_","contents","freeze","key","path","ctrl","callVisitor","replaceNode","isCollection","concat","i","items","length","ci","splice","ck","cv","async","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","visit","escapeChars","Directives","yaml","tags","docStart","docEnd","defaultYaml","defaultTags","atDocument","res","version","atNextDocument","explicit","add","line","onError","parts","trim","split","name","shift","handle","prefix","test","source","verbatim","suffix","match","decodeURIComponent","tagString","tag","entries","startsWith","substring","replace","ch","toString","doc","lines","tagEntries","tagNames","_key","keys","some","tn","push","join","anchorIsValid","anchor","sa","JSON","stringify","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","super","set","resolve","found","toJSON","_arg","ctx","maxAliasCount","msg","ReferenceError","data","get","count","aliasCount","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","item","c","kc","vc","Math","max","toJS","arg","Array","isArray","map","v","String","isScalar$1","onCreate","res2","keep","Number","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","createNode","map2","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onAnchor","onTagObj","sourceObjects","ref","tagObj","filter","t","find","format","identify","findTagObject","schema2","node2","iterator","collectionFromPath","k","isInteger","a","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","delete","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","maxFlowStringSingleLineLength","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","i2","fold","end2","getFoldOptions","containsDocumentMarker","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","start","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockString","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","indentLength","limit","strLen","lineLengthOverLimit","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","header","stringifyString","inFlow","ss","_stringify","_type","actualString","default","compat","plainString","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","indentStep","repeat","stringify$2","resolvedAliases","TypeError","o","obj","nodeClass","getTagObject","props","stringifyProps","warn","logLevel","warning","process","emitWarning","console","addPairToJSMap","merge","isMergeKey","mergeToJSMap","jsKey","stringKey","strCtx","inStringifyKey","strKey","mapKeyWarned","jsonStr","stringifyKey","jsValue","srcMap","value2","prototype","hasOwnProperty","call","createPair","_","mapAsMap","allNullValues","keyComment","explicitKey","keyCommentDone","chompKeep","vcb","valueComment","spaceBefore","flow","valueCommentDone","valueStr","ws","stringifyPair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","comment2","addCommentBefore","ik","str2","reqNewline","linesAtValue","iv","reduce","sum","ic","trimStart","findPair","YAMLMap","pair","overwrite","_pair","sortEntries","sortMapEntries","findIndex","Type","replacer","sort","YAMLSeq","idx","asItemIndex","seq2","seq","string","nullTag","boolTag","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify$1","intOct","_onError","intStringify","int","intHex","intIdentify$1","stringifyJSON","binary","Uint8Array","Buffer","from","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","cn","createPairs","iterable","pairs2","pairs","YAMLOMap","bind","omap","seenKeys","omap2","boolStringify","trueTag","falseTag","f","sign","n2","intBin","YAMLSet","keepPair","set2","parseSexagesimal","asBigInt","p2","stringifySexagesimal","_60","unshift","intTime","floatTime","timestamp","Date","RegExp","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","schema$1","schema$2","tagsByName","bool","null","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","applyReviver","reviver","val","len","v0","v1","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","setAnchors","aliasObjects","prevAnchors","error","createNodeAnchors","sv","jsonArg","values","hasDirectives","dir","cs","contentComment","body","dc","stringifyDocument","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","startOnNewline","atNewline","hasSpace","commentSep","hasNewline","hasNewlineAfterProp","reqSpace","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveEnd","blockMsg","isBlock","composeCollection","CN2","tagToken","coll","composeNode","composeNode2","composeEmptyNode","composeEmptyNode2","bm","atRoot","collItem","keyProps","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockMap","bs","resolveBlockSeq","isMap2","fcName","prevItemComment","loop","expectedEnd","ce","ee","cePos","toUpperCase","resolveFlowCollection","Coll","expType","kt","resolveBlockScalar","scalar","ts","parseBlockScalarHeader","first","m","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","resolveFlowScalar","badChar","foldLines","plainValue","singleQuotedValue","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","doubleQuotedValue","valueEnd","re","exec","lastIndex","e","r","N","L","P","fromCodePoint","composeScalar","matchWithTest","findScalarTagByName","tag2","findScalarTagByTest","emptyScalarPosition","before","CN","isSrcToken","alias","composeAlias","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","forceDoc","endOffset","opts","contentEnd","composeDoc","addEndtoBlockProps","setFlowScalarValue","oa","tok","nl","stringifyToken","stringifyItem","cst2","_visit","field","itemAtPath","index","parentCollection","tokenType","context","he","head","afterKey","setBlockScalarValue","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","state","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","quote","qb","pushToIndex","ch2","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","parse","lexeme","step","pop","sourceToken","top","stream","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atNextItem","start2","fs","flowScalar","parseOptions","lineCounter","parser","composer","_doc","forEach","_reviver","docs","empty","round","r2","isImmediate","callback","maxWait","now","l","r3","e2","arguments","Promise","t2","c2","clearTimeout","setTimeout","i3","d2","reject","cancel","ftml","Worker","loadlocales","lang","sideftml","then","topftml","theme","messages","YAML","actionarea","messagevalue","querySelector","innerHTML","getElementById","langconfig","op","label","selected","appendChild","readlang","postMessage","onmessage","event","html","styles","pageStyles","pageContent","sideContent","topContent","editpageField","edittitleField","editsideField","editsaveButton","langSelect","addEventListener","debounce","target","HTMLTextAreaElement","FtmlStorageItem","title","page","side","localStorage","setItem","HTMLInputElement","WPconfigItem","suggestedName","types","description","accept","window","showSaveFilePicker","createWritable","write","close","err","log","getItem","FtmlStorage","removeItem"],"mappings":"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"}